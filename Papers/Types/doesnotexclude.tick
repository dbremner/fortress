%%%%%%%%%%%%%%%%%%%%% BEGIN FIGURE %%%%%%%%%%%%%%%%%%%%%%
\begin{figure*}[ht]
  \begin{tabular}{c|c}

  %% MINIPAGE FOR LEFT COLUMN
  \begin{minipage}{.47\textwidth}

\newjudge{Exclusion under constraints}{\jexc{T}{T}{\C}}

symmetry
\infrule
  {\jexc{T}{S}{\C}}
  {\jexc{S}{T}{\C}}

structural rules
\infrule
  {}
  {\jexc{\BottomType}{T}{\TRUE}}

\infrule
  {T \neq \BottomType}
  {\jexc{\Any}{T}{\FALSE}}

\infrule
  {|\bar{S}| \neq |\bar{T}|}
  {\jexc{(\bar{S})}{(\bar{T})}{\TRUE}}

\infrule
  {|\bar{S}|=|\bar{T}|  \andalso
   \forall  i \in \{1, \ldots, |\bar{S}| \} . \jexc{S_i}{T_i}{\C_i}}
  {\jexc{(\bar{S})}{(\bar{T})}{\bigcup \C_i}}

\infrule
  {|\bar{T}| \neq 1}
  {\jexc{`D -> R`}{(\bar{T})}{\TRUE}}

\infrule
  {C \neq \Any \andalso
   |\bar{T}| \neq 1}
  {\jexc{`C[ S_bar ]`}{(\bar{T})}{\TRUE}}

\infrule
  {C \neq \Any}
  {\jexc{`C[\ S_bar \]`}{`T -> U`}{\TRUE}}

\infrule
  {\jexc{S}{U}{\C} \andalso 
   \jexc{T}{U}{\C'} \\
   \jexc{S}{T}{\C''}}
  {\jexc{S \cap T}{U}{(\C \cup \C' \cup \C''}}

\infrule
  {\jexc{S}{U}{\C}    \andalso 
   \jexc{T}{U}{\C'}}
  {\jexc{S \cup T}{U}{\C \cap \C'}}

type variables
\infrule
  {\jexc{\Delta(X)}{T}{\C}}
  {\jexc{X}{T}{\C}}

  \end{minipage}
  
  %%% RIGHT COLUMN
  &
  
  %% MINIPAGE FOR LEFT COLUMN
  \begin{minipage}{.47\textwidth}

constructors
\infrule
  {\jgconstrtemplate{`C[\S_bar\]`}{\exc_{e}}{`D[\T_bar\]`}{\C_e} \\
   \jgconstrtemplate{`C[\S_bar\]`}{\exc_{o}}{`D[\T_bar\]`}{\C_o} \\
   \jgconstrtemplate{`C[\S_bar\]`}{\exc_{c}}{`D[\T_bar\]`}{\C_c} \\
   \jgconstrtemplate{`C[\S_bar\]`}{\exc_{p}}{`D[\T_bar\]`}{\C_p}}
  {\jexc{`C[\S_bar\]`}{`D[\T_bar\]`}{\C_e \cup \C_o \cup \C_c \cup \C_p}}

\TODO{* means e,o,c}
\infrule
  {\jgconstrtemplate{`C[\S_bar\]`}{\excr_{*}}{`D[\T_bar\]`}{\C} \andalso
   \jgconstrtemplate{`C[\S_bar\]`}{\excr_{*}}{`D[\T_bar\]`}{\C'}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\exc_{*}}{`D[\T_bar\]`}{\C \cup \C'}}

\infrule
  {C = D}
  {\jgconstrtemplate{`C[\S_bar\]`}{\excr_{*}}{`D[\T_bar\]`}{\FALSE}}

\TODO{$C'$ in ancestral excludes $C$}
\infrule
  {C \neq D \\
   \forall C' \in ancesters(C).\; \jcsub{`D[\T_bar\]`}{`C'[\S'_bar\]`}{\C_{C'}}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\excr_{e}}{`D[\T_bar\]`}{\bigcup \C_{C'}}}

\infrule
  {C \neq D \andalso \text{object } C \\
   \jgconstrtemplate{`C[\S_bar\]`}{\not \subtypeof}{`D[\T_bar\]`}{\C}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\excr_{o}}{`D[\T_bar\]`}{\C}}

\TODO{$C'$ in comprises C}

\infrule
  {C \neq D \andalso
   \jexc{`C'[\S'_bar\]`}{`D[\T_bar\]`}{\C}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\excr_{c}}{`D[\T_bar\]`}{\bigcup \C}}

\infrule
  {C = D \andalso \jgconstrtemplate{S}{\not \equiv}{\bar{T}}{\C}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\bexc_{p}}{`D[\T_bar\]`}{\C}}

\infrule
  {C \neq D}
  {\jgconstrtemplate{`C[\S_bar\]`}{\bexc_{p}}{`D[\T_bar\]`}{\FALSE}}

\TODO{Where $C'$ is in (ancestors of C) + C and $D'$ is in (ancestors of D') + D}
\infrule
  {\jgconstrtemplate{`C'[\S'_bar\]`}{\bexc_{p}}{`D'[\T'_bar\]`}{\C_{C'}}}
  {\jgconstrtemplate{`C[\S_bar\]`}{\exc_{p}}{`D[\T_bar\]`}{\bigcup \C_{C'}}}

  \end{minipage} \\
  \end{tabular}

  \caption{Exclusion under constraints}
  \label{fig:jexc}
\end{figure*}


We define the following exclusion judgment:\\[-.2em]
\[ \jexc{S}{T}{\C} \]
\\
which reads as ````the types `S` and `T` exclude each other under the assumptions $\Delta$
if the constraints $\C$ hold,'' in Figure~\ref{fig:jexc}.
We can get the usual exclusion judgment:\\[-.2em]
\[\jgtemplate{S}{\exc}{T}\]\\
by the following:

\infrule
{\jexc{S}{T}{\TRUE}}
{\jgtemplate{S}{\exc}{T}}
