\begin{figure}
\typicallabel{x}

\newjudge{Existential subtyping}{\jleinner{\Phi}{\Phi} \quad \jle{\Phi}{\Phi}}

\bigskip

\infrule
  { \Delta' = \Delta, \bar{\lambda}
    \andalso
    \bar{\lambda = \bdb{\chi} \extends P \extends \bdb{\eta}}
    \\[2pt]
    \setb{P} \cap \FV(\bar{\chi'},\bar{\eta'},{\alpha'}) = \emptyset
    \andalso
    \jsubtype[\Delta']{\alpha}{\Bigsubstb{\gamma}{Q}\alpha'}
    \\[6pt]
    \jbsubtype[\Delta']{\underline{\Bigsubstb{\gamma}{Q}}\chi'}{\gamma}
    \andalso
    \jbsubtype[\Delta']{\gamma}{\underline{\Bigsubstb{\gamma}{Q}}\eta'}
  }
  { \jleinnerusing{\existstypeb{\lambda}{\alpha}}{\existstype{\bdb{\chi'} \extends Q \extends \bdb{\eta'}}{\alpha'}}{\Bigsubstb{\gamma}{Q}} }

\bigskip

\infrule
  { \jtreds{\Phi}{\Phi'}{\dontcare} \andalso \jleinnerusing{\Phi'}{\Phi''}{\dontcare} }
  { \jle{\Phi}{\Phi''} }

\medskip

\infrule
  { \jtreds{\Phi}{\Phi'}{\dontcare} \andalso \jleinnerusing{\Phi'}{\Phi''}{\sigma} }
  { \jleusing{\Phi}{\Phi''}{\sigma} }

\bigskip

\newjudge{Universal subtyping}{\jleinner{\Psi}{\Psi} \quad \jle{\Psi}{\Psi}}

\bigskip

\infrule
  { \Delta' = \Delta, \bar{\lambda}
    \andalso
    \bar{\lambda = \bdb{\chi'} \extends Q \extends \bdb{\eta'}}
    \\[2pt]
    \setb{Q} \cap \FV(\bar{\chi},\bar{\eta},{\alpha}) = \emptyset
    \andalso
    \jsubtype[\Delta']{\Bigsubstb{\gamma}{P}\alpha}{\alpha'}
    \\[6pt]
    \jbsubtype[\Delta']{\underline{\Bigsubstb{\gamma}{P}}\chi}{\gamma}
    \andalso
    \jbsubtype[\Delta']{\gamma}{\underline{\Bigsubstb{\gamma}{P}}\eta}
  }
  { \jleinnerusing{\foralltypeb{\bdb{\chi} \extends P \extends \bdb{\eta}}{\alpha}}{\foralltypeb{\lambda}{\alpha'}}{\Bigsubstb{\gamma}{Q}} }

\bigskip

\infrule
  { \jleinnerusing{\Psi}{\Psi''}{\dontcare} \andalso \jtreds{\Psi'}{\Psi''}{\dontcare} }
  { \jle{\Psi}{\Psi'} }

\bigskip

\newjudge{Existential Reduction}{\jtreds{\Phi}{\Phi}{\sigma}}

\bigskip

\infrule
  {\jcnequiv{\alpha}{\Bottom}{\C} \andalso \toConstraint{\lambda}{\C'} \\
   \jsolve{\C \wedge \C'}{\sigma}{\C''} \andalso \toBounds{\C''}{\lambda'}}
  {\jtreds{\existstypeb{\lambda}{\alpha}}{\existstypeb{\lambda'}{\sigma(\alpha)}}{\sigma}}

\bigskip

\infrule
  {\text{otherwise}}
  {\jtreds{\existstypeb{\lambda}{\alpha}}{\existstypeb{\lambda}{\alpha}}{\emptysubst}}

\bigskip
  
\newjudge{Universal Reduction}{\jtreds{\Psi}{\Psi}{\sigma}}

\bigskip

\infrule
  { \jtreds{\existstypeb{\lambda}{\alpha}}{\existstypeb{\lambda'}{\alpha'}}{\sigma} }
  { \jtreds{\foralltypeb{\lambda}{\arrowtype{\alpha}{\omega}}}{\foralltypeb{\lambda'}{\arrowtype{\alpha'}{\sigma(\omega)}}}{\sigma} }

\bigskip

\newjudge{Exclusion of existential types}{\jexcludes{\Phi}{\Phi}}

\bigskip

\infrule
  { \mathit{distinct}(\bar{P},\bar{P'})  \\
    \FV(\bar{\chi},\bar{eta},\alpha)\cap\setb{P'}=\FV(\bar{\chi'},\bar{eta'},\alpha')\cap\setb{P}=\emptyset \\
    \jle{\existstype{\bar{\bdb{\chi} \extends P \extends {\eta}},\bar{\bdb{\chi'} \extends P' \extends {\eta'}}}{\alpha\cap\alpha'}}{\Bottom} }
  { \jexcludes{\existstypeb{\bdb{\chi} \extends P \extends {\eta}}{\alpha}}{\existstypeb{\bdb{\chi'} \extends P' \extends {\eta'}}{\alpha'}} }

\medskip
\caption{Typing Rules for Quantified Types. Note that alpha-renaming of type variables may be necessary to apply these rules.}
\label{fig:quantified}
\end{figure}
