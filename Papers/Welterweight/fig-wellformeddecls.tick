

\begin{figure*}
\typicallabel{D-Trait}


\newjudge{Well-formed program and its static type}{\jtype[]{p}{\alpha}}
\bigskip

\infrule[T-Program]
  { p = \bar{\delta},e  \andalso  \mathit{distinct}(\bar{\delta})  \andalso  \setb{\Id} = \mathit{typeNames}(\Delta)  \andalso  \mathit{distinct}(\bar{\Id})  \andalso
    \jbwfdecl[\setb{\delta}]{\delta}  \andalso  \jtype[\setb{\delta};\emptyseq]{e}{\alpha} }
  { \jtype[]{p}{\alpha} }

\bigskip
\newjudge{Well-formed declarations}{\jwfdecl{\delta}}
\bigskip

% Stuff in \Delta is assumed to be well-formed

\infrule[D-Trait]
  { \Delta' = \Delta,\bar{\bd{\,} \extends P \extends \bdb{\xi}} \\[2pt]
    \jbwftype[\Delta']{\xi}  \andalso  \jbwftype[\Delta']{A\obb{\tau}}  \andalso  \jbwftype[\Delta']{t}  \andalso  \jbwftype[\Delta']{c}  \andalso
    \jbsubtype[\Delta']{c}{\underline{T\obb{P}}} \\[2pt]
    \mathit{distinct}(T, \bar{A})  \andalso  \bar{\mathit{notOfTrait}(\underline{T}, t)}  \andalso  \bar{\mathit{notOfTrait}(\underline{T}, c)}  \andalso  
    \jbwfmeth[\Delta';\kwd{self}\COLON T\bigobb{P};\bar{P};\emptyseq]{\mu} }
  { \jwfdecl{\kwd{trait} \; T\bigobb{V\;P \extends \bdb{\xi}} \mathbin{\extends} \bigbdb{A\obb{\tau}} \mathbin{\exc} \bigbdb{t} \mathbin{\comprises} \bigbdb{c} \; \bar{\mu} \; \kwd{end}} }

\bigskip

\infrule[D-Object]
  { \Delta' = \Delta,\bar{\bd{\,} \extends P \extends \bdb{\xi}} \\[1pt]
    \jbwftype[\Delta']{\xi}  \andalso  \jbwftype[\Delta']{\tau}  \andalso  \jbwftype[\Delta']{t} \andalso
    \jbwfmeth[\Delta';\kwd{self}\COLON O\bigobb{P},\bar{z\COLON\tau};\bar{P};\bar{z}]{\mu} }
  { \jwfdecl{\kwd{object} \; O\bigobb{P \extends \bdb{\xi}} (\bar{z\COLON\tau}) \extends \bigbdb{t} \; \bar{\mu } \; \kwd{end}} }

\bigskip

\infrule[D-Function]
  { \Delta' = \Delta,\bar{\bd{\,} \extends P \extends \bdb{\xi}} \\[1pt]
    \jbwftype[\Delta']{\xi}  \andalso  \jbwftype[\Delta']{\tau}  \andalso  \jwftype[\Delta']{\omega} \andalso
    \jtype[\Delta';\bar{x\COLON\tau}]{e}{\rho}  \andalso  \jsubtype[\Delta']{\rho}{\omega} }
  { \jwfdecl{f\bigobb{P \extends \bdb{\xi}} (\bar{x\COLON\tau})\COLON\omega = e} }

\bigskip

\newjudge{Well-formed methods}{\jwfmeth{\mu}}
\bigskip

\infrule[D-Method]
  { \Delta' = \Delta,\bar{\bdb{\zeta} \extends Q \extends \bdb{\xi}}  \andalso  \mathit{distinct}(\bar{P},\bar{Q})  \andalso  \mathit{distinct}(\bar{x},\bar{z}) \\[1pt]
    \jbwftype[\Delta']{\zeta}  \andalso   \jbwftype[\Delta']{\xi}  \andalso  \jbwftype[\Delta']{\tau}  \andalso  \jwftype[\Delta']{\omega} \andalso
    \jtype[\Delta';\Gamma,\bar{x\COLON\tau}]{e}{\rho}  \andalso  \jsubtype[\Delta']{\rho}{\omega} }
  { \jwfmeth{m\bigobb{\bdb{\zeta} \extends Q \extends \bdb{\xi}} (\bar{x\COLON\tau})\COLON\omega = e} }

\medskip
\caption{Program typing and Well-formed Definitions}
\label{fig:wellformeddecls}
\end{figure*}
