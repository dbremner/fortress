

\begin{figure*}
\typicallabel{D-Trait}


\newjudge{Well-formed program and its static type}{\jtype[]{p}{\theta}}

\smallskip

\infrule[T-Program]
  { \Pi = \bar{\psi},\bar{\varphi},e  \hskip1.85em % \andalso
    \mathit{distinct}(\bar{\psi})  \hskip1.85em % \andalso
    \mathit{distinct}(\bar{\varphi})  \hskip1.85em % \andalso
    \countof(\mathit{typeNames}(\setb{\psi})) = \countof(\psi) \hskip1.85em % \andalso
    \jbwfdecl[\setb{\psi},\setb{\varphi}]{\psi}  \hskip1.85em % \andalso
    \jbwfdecl[\setb{\psi},\setb{\varphi}]{\varphi}  \\[3pt]
    \setb{\varphi'} = \bigabstractdecls{\setb{\varphi}}  \andalso
    \bar{\jcoveredrule{\varphi'}{\underline{\bigconcretedecls{\setb{\varphi}}}}}  \andalso
    \jtype[\setb{\psi};\setb{\varphi};\emptyseq]{e}{\theta} \\[6pt]
    \jbARROWnoduplicatesrule{\varphi}{\underline{\varphi}}  \hskip1.85em % \andalso
    \jbARROWmethodmeetrule{\varphi}{\underline{\varphi}} \hskip1.85em % \andalso
    \jbARROWreturntyperule{\varphi}{\underline{\varphi}} \hskip1.85em % \andalso
    \jbARROWreturntyperule{\underline{\varphi}}{\varphi} }
  { \jtype[]{\Pi}{\theta} }

\smallskip

\newjudge{Well-formed trait and object declarations}{\jwfdecl{\psi}}

\bigskip

% Stuff in \Delta is assumed to be well-formed

{\def\andalso{\hbox to 1.8em{\hss}}   % need to tighten slightly
\infrule[D-Trait]
  { \Delta' = \Delta \cup \bigsetb{\bd{\,} \extends V\;P \extends \bdb{\xi}}  \andalso
    \mathit{distinct}(\bar{P})  \andalso
    \jbwftype[\Delta']{\xi}  \andalso
    \setb{\chi} = \properancestors[\Delta']{T\obb{P}}  \\[3pt]
    \jbwftype[\Delta']{t}  \andalso
    \bar{\name{t'} \neq \underline{T}}  \andalso
    \jbwftype[\Delta']{t'}  \andalso
    T \not\in \mathit{typeNames}\bigtuple{\setb{\chi}}  \andalso
    \mathit{distinct}(\bar{\mu})  \andalso
    \jbARROWancestormeetrule{\chi}{\underline{\chi}}  \\[3pt]
    \fbox{$ \bar{\name{c} \neq \underline{T}}  \andalso
    \jbwftype[\Delta']{c}  \andalso
    \forall\, t'' \in \setb{t'}.\bigtuple{\jbnotsubtype[\Delta']{c}{t''}\,} \andalso
    \forall\, t'' \in \setb{t}.\bigtuple{\jbnotsubtype[\Delta']{t''}{c}\,}  \andalso
    \jbsubtype[\Delta']{c}{\underline{T\obb{P}}} $} \\[7pt]
    \jbnotsubtype[\Delta']{\underline{T\obb{P}}}{t'}  \andalso
    \jbwfmeth[\Delta';\Phi;\kwd{self}\COLON T\bigobb{P};\bar{P}]{\mu}  \andalso
    \setb{M} = \allvisible[\Delta']{T\obb{P}}  \\[4pt]
    \jbARROWnoduplicatesrule{M}{\underline{M}}  \hskip1.4em % \andalso
    \jbARROWmethodmeetrule{M}{\underline{M}} \hskip1.4em % \andalso
    \jbARROWreturntyperule{M}{\underline{M}} \hskip1.4em % \andalso
    \jbARROWreturntyperule{\underline{M}}{M}
    }
  { \jwfdecl{\kwd{trait} \; T\bigobb{V\;P \extends \bdb{\xi}} \extends \bigbdb{t} \; \fbox{$\comprises \bigbdb{c}$} \exc \bigbdb{t'} \; \bar{\mu} \; \kwd{end}} }
}

\medskip

\infrule[D-Object]
  { \Delta' = \Delta \cup \bigsetb{\bd{\,} \extends \kwd{invariant}\;P \extends \bdb{\xi}}  \andalso
    \mathit{distinct}(\bar{P})  \andalso
    \jbwftype[\Delta']{\xi}  \andalso
    \setb{\chi} = \properancestors[\Delta']{O\obb{P}}  \\[3pt]
    \jbwftype[\Delta']{\tau}  \andalso
    \jbwftype[\Delta']{t}  \andalso
    \mathit{distinct}(\bar{\mu})  \andalso
    \jbARROWancestormeetrule{\chi}{\underline{\chi}}  \\[3pt]
    \jbwfmeth[\Delta';\kwd{self}\COLON O\bigobb{P},\bar{x\COLON\tau};\bar{P}]{\mu} \andalso
    \setb{M} = \allvisible[\Delta']{O\obb{P}}  \\[4pt]
    \setb{M'} = \bigabstractdecls{\setb{M}}  \andalso
    \bar{\jcoveredrule{M'}{\underline{\bigconcretedecls{\setb{M}}}}}  \\[6pt]
    \jbARROWnoduplicatesrule{M}{\underline{M}}  \hskip1.4em % \andalso
    \jbARROWmethodmeetrule{M}{\underline{M}}  \hskip1.4em % \andalso
    \jbARROWreturntyperule{M}{\underline{M}}  \hskip1.4em % \andalso
    \jbARROWreturntyperule{\underline{M}}{M}
    }
  { \jwfdecl{\kwd{object} \; O\bigobb{P \extends \bdb{\xi}} (\bar{x\COLON\tau}) \extends \bigbdb{t} \; \bar{\mu } \; \kwd{end}} }

\smallskip

\newjudge{Well-formed function declarations}{\jwfdecl{\delta}}

\bigskip

\infrule[D-Function]
  { \bar{\Delta' = \Delta \cup \bigset{\overcirclerightarrow{\bd{\,} \extends \kwd{invariant}\;P \extends \bdb{\xi}}}}  \andalso
    \Delta'' = \Delta \cup \bigsetb{\bd{\,} \extends \kwd{invariant}\;P \extends \bdb{\xi}}  \andalso
    \mathit{distinct}(\bar{P})  \\[3pt]
    \bar{\jwftype[\flip{\Delta'}]{\xi}} \andalso
    \jbwftype[\flip{\Delta''}]{\tau}  \andalso  \jwftype[\Delta'']{\omega} \andalso
    \fbox{$ \jtype[\FLAT{\Delta''};\Phi;\bar{x\COLON\tau}]{e}{\rho}  \andalso  \jsubtype[\Delta'']{\rho}{\omega} $} }
  { \jwfdecl{f\bigobb{P \extends \bdb{\xi}} (\bar{x\COLON\tau})\COLON\omega \; \fbox{$\defneq e \vphantom{X}$}} }

\bigskip

\newjudge{Well-formed method declarations}{\jwfmeth{\mu}}

\bigskip

\infrule[D-Method]
  { \bar{\Delta' = \Delta \cup \bigset{\overcirclerightarrow{\bdb{\zeta} \extends \kwd{invariant}\;Q \extends \bdb{\xi}}}}  \andalso
    \Delta'' = \Delta \cup \bigsetb{\bdb{\zeta} \extends \kwd{invariant}\;Q \extends \bdb{\xi}}  \andalso
    \mathit{distinct}(\bar{P},\bar{Q})  \\[3pt]
    \bar{\jwftype[\Delta']{\zeta}}  \andalso  \bar{\jwftype[\flip{\Delta'}]{\xi}}  \andalso
    \jbwftype[\flip{\Delta''}]{\tau}  \andalso  \jwftype[\Delta'']{\omega} \andalso
    \fbox{$ \jtype[\FLAT{\Delta''};\Phi;\Gamma,\bar{x\COLON\tau}]{e}{\rho}  \andalso  \jsubtype[\Delta'']{\rho}{\omega} $} }
  { \jwfmeth{m\bigobb{\bdb{\zeta} \extends Q \extends \bdb{\xi}} (\bar{x\COLON\tau})\COLON\omega \; \fbox{$\defneq e \vphantom{X}$}} }

\medskip

\newjudge{Variance flattening}{\FLAT{\Delta} \mathbin{=} \Delta}

\medskip

\noindent\(
\begin{array}[t]{@{}l@{}}
\FLAT{\Delta} = {\displaystyle \bigcup_{{\delta\in\Delta}} \mathit{oneFlat}(\delta)}
\end{array} \hskip5em
\begin{array}[t]{@{}l@{}}
\mathit{oneFlat}\bigtuple{\bdb{\chi} \mathbin{\extends} V\;P \mathbin{\extends} \bdb{\eta}} = \bigset{\bdb{\chi} \mathbin{\extends} \kwd{invariant}\;P \mathbin{\extends} \bdb{\eta}} \\[1pt]
\mathit{oneFlat}(\psi) = \set{\psi} \\[4pt]
\end{array}
\)

\medskip
\caption{Program typing and Well-formed Definitions}
\label{fig:wellformeddecls}
\end{figure*}
