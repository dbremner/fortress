/*******************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************/

/*
 * Definition of Fortress function declarations.
 */
module com.sun.fortress.parser.Function(Param, Header, NoNewlineType,
                                        NoNewlineExpr, Identifier, Keyword,
                                        Symbol, Spacing);

import Param;
import Header;
import NoNewlineType;
import NoNewlineExpr;
import Identifier;
import Keyword;
import Symbol;
import Spacing;

/* FnDecl ::=
     FnMods? FnHeaderFront FnHeaderClause w = w NoNewlineExpr
   | FnMods? AbsFnHeaderFront FnHeaderClause
   | FnSig
 */
Decl FnDecl =
     a1:FnMods? a2:FnHeaderFront a3:FnHeaderClause w equals w a4:NoNewlineExpr
     { if (a1 == null) a1 = FortressUtil.emptyModifiers();
       yyValue = FortressUtil.mkFnDecl(createSpan(yyStart,yyCount),a1,a2,a3,a4);
     }
   / a1:FnMods? a2:AbsFnHeaderFront a3:FnHeaderClause
     { if (a1 == null) a1 = FortressUtil.emptyModifiers();
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount),a1,a2,a3);
     }
   / FnSig ;

/* FnSig ::= SimpleName w : w NoNewlineType */
AbsFnDecl FnSig =
     a1:SimpleName w colon w a2:NoNewlineType
     { final List<Modifier> mods = FortressUtil.emptyModifiers();
       final List<Param>  params = FortressUtil.emptyParams();

       if (!(a2 instanceof ArrowType)) {
           syntaxError(a2.getSpan(),
                       "Abstract function declaration should have an arrow type.");
       }
       
       Domain d = ((ArrowType) a2).getDomain();
       for (Type argT : d.getArgs()) {
           Id name = new Id(argT.getSpan(), "_");
           params.add(NodeFactory.makeParam(argT.getSpan(), mods, name, argT));
       }
       if (d.getVarargs().isSome()) {
           Type argT = d.getVarargs().unwrap();
           Id name = new Id(argT.getSpan(), "_");
           params.add(NodeFactory.makeVarargsParam(argT.getSpan(), mods, name, argT));
       }
       assert(d.getKeywords().isEmpty()): "Keyword parameters present"
                                                     + " in a FnSig: " + d;
       /*
       We could do this, if we had a suitable value for bottomExpr:
       for (KeywordType k : d.getKeywords()) {
           params.add(new Param(k.getSpan(), mods, k.getName(), k.getType(), bottomExpr));
       }
       */
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods, a1,
                                          params, ((ArrowType)a2).getRange());
     };

/* AbsFnDecl ::=
     AbsFnMods? AbsFnHeaderFront FnHeaderClause
   | FnSig
 */
AbsFnDecl AbsFnDecl =
     a1:AbsFnMods? a2:AbsFnHeaderFront a3:FnHeaderClause
     { if (a1 == null) a1 = FortressUtil.emptyModifiers();
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount),a1,a2,a3);
     }
   / FnSig ;

/* FnHeaderFront ::=
     NamedFnHeaderFront
   | OpHeaderFront
 */
FnHeaderFront FnHeaderFront =
     NamedFnHeaderFront
   / OpHeaderFront ;

/* AbsFnHeaderFront ::=
     AbsNamedFnHeaderFront
   | AbsOpHeaderFront
 */
FnHeaderFront AbsFnHeaderFront =
     AbsNamedFnHeaderFront
   / AbsOpHeaderFront ;

/* NamedFnHeaderFront ::= Id (w StaticParams)? w ValParam */
FnHeaderFront NamedFnHeaderFront =
     a1:Id a2:(w StaticParams)? w a3:ValParam
     { if (a2 == null) a2 = FortressUtil.emptyStaticParams();
       yyValue = new FnHeaderFront(a1, a2, a3);
     };

/* AbsNamedFnHeaderFront ::= Id (w StaticParams)? w AbsValParam */
FnHeaderFront AbsNamedFnHeaderFront =
     a1:Id a2:(w StaticParams)? w a3:AbsValParam
     { if (a2 == null) a2 = FortressUtil.emptyStaticParams();
       yyValue = new FnHeaderFront(a1, a2, a3);
     };
