(*******************************************************************************
    Copyright 2009 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

import CompilerBuiltin.{...} except Boolean
export Executable

trait Boolean
    opr NOT(self): Boolean
    opr AND(self, other: Boolean): Boolean
    opr OR(self, other: Boolean): Boolean
    opr ->(self, other: Boolean): Boolean
    opr <->(self, other: Boolean): Boolean
end

value object true extends Boolean
    opr NOT(self): Boolean = false
    opr AND(self, other: Boolean): Boolean = other
    opr OR(self, other: Boolean): Boolean = true
    opr ->(self, other: Boolean): Boolean = other
    opr <->(self, other: Boolean): Boolean = other
end

value object false extends Boolean
    opr NOT(self): Boolean = true
    opr AND(self, other: Boolean): Boolean = self
    opr OR(self, other: Boolean): Boolean = other
    opr ->(self, other: Boolean): Boolean = true
    opr <->(self, other: Boolean): Boolean = NOT(other)
end

fib(n: ZZ32): ZZ32 = if NOT(n > 2) then 1 else fib(n-1) + fib(n-2) end

run(): () = println(fib 20)
