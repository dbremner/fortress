(*******************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

component nestedTransactions

export Executable


test0():() = do
    var count : ZZ32 = 0
    atomic do 
        for i <- 1 # 5 do
            atomic do
                for j <- 1 # 5 do
                    atomic do
                       count := count + 1
                    end
                end
           end
        end
   end
   assert(count,    25, "test0 failed")
end

test1():()=do
    var count : ZZ32 = 0
    for i<-1#10 do
        atomic do
            count += 1
        end
        atomic do
            count += 1
            atomic do
                count += 1
            end
        end
        atomic do
            count += 1
            atomic do
                count += 1
                atomic do
                    count += 1
                end
            end
        end
        atomic do
            count += 1
        end
    end
    assert(count,70,"test1 failed")
end

test2()=do
  var count     : ZZ32 = 0
  var successes : ZZ32 = 0
  var failures  : ZZ32 = 0
  for i<-1#100 do
    atomic do
      count += 1
      try
         tryatomic do successes += 1 end
      catch e
          TryAtomicFailure => atomic do failures+= 1 end
      end
    end
  end
  assert(count, successes, "TryAtomic should be flattened to a noop")
end

test3()=do
    var count :ZZ32 = 0
    atomic do
        for i<-0#5 atomic do
            for j<-0#5 atomic do
                count += 1
            end
        end
    end
    assert(count,25, "Nested transactions");
end

run(args:String...):()=do
    println("Starting test0")
    recordTime(6.0)
    test0() 
    printTime(6.0)
    println("Starting test1")
    recordTime(6.0)
    test1()
    printTime(6.0)
    println("Starting test2")
    recordTime(6.0)
    test2()
    printTime(6.0)
    recordTime(6.0)
    println("Starting test3")
    test3()   
    printTime(6.0)
end
end
