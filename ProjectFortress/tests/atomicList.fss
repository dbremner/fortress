(********************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
********************************************************************************)

component atomicList
export Executable

trait List[\E\] comprises {Elem[\E\], Empty[\E\]}
   car():E
   cdr():List[\E\]
   cons(x:E):List[\E\]
   isEmpty():Boolean
   toString():()
   count():ZZ32
end

object Empty[\E\]() extends List[\E\]
   car():E = do ThrowError(" Empty List has no car") car() end
   cdr():List[\E\] = do ThrowError(" Empty List has no cdr") cdr() end
   cons(z:E) =  Elem[\E\](z, self)
   toString() = " Empty"
   isEmpty() = true
   count() = 0
end

object Elem[\E\](val:E, rest:List[\E\]) extends List[\E\]
   car():E = val
   cdr():List[\E\] = rest
   cons(z:E) = Elem[\E\](z,self)
   toString() = " " val ", " rest.toString()
   isEmpty() = false
   count() = 1 + cdr().count()
end

run(args:String...):()=do
   init:List[\ZZ32\] := Empty[\ZZ32\]()
   for i<-1#10 do
      atomic do
         init := init.cons(i)
      end
   end
   if init.count() = 10 then println("Pass") else println("Fail") end

end
end
