(*******************************************************************************
    Copyright 2007 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

component Spawn
export Executable

makeWork(num:ZZ32):ZZ32 = do
   var sum:ZZ32 = 0
   for i<-1#num do
      atomic do sum += 1 end
   end
   sum
end

test1():() = do
   var x:ZZ32 = 0
   pt:PrimitiveThread[\Any\] = spawn do x:=1 end
   pt.wait()
   assert(x=1, "test1 x=1")
end

test2():() = do
   var x : ZZ32 = 0
   var y : ZZ32 = 0
   spawn atomic do  x:=1; y := 1 end
   while (x = 0) do end
   assert(x=1,"test2 x=1")
   assert(y=1,"test2 y=1")
end

test3():() = do
   var x : ZZ32 = 0
   var y : ZZ32 = 0
   pt:PrimitiveThread[\Any\] = spawn do y := 1; while (x = 0) do end end
   x:=1
   pt.wait()
   assert(y=1,"test3 y=1")
end


test4():() = do 
   var x : ZZ32 = 0
   ft:PrimitiveThread[\Any\] = PrimitiveThread[\Any\](fn()=>do x:=1 end)
   ft.wait()
   assert(x=1, "test4 PrimitiveThread wrong")
end

test5():() = do
   ft:PrimitiveThread[\Any\] = spawn(makeWork(10));
   assert(ft.val(),10, "test5 wrong")
end

test6():() = do
   ft:PrimitiveThread[\Any\] = spawn(makeWork(10000000));
   assert(ft.ready(), false, "test7 can't be ready yet")
   ft.stop()
end

run(args:String...):()=do
   test1()
   test2()
   test3()
   test4() 
   test5()
   test6()
end
end
