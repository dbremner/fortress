(*******************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

component testbasic

  import Xml2.{...}
  import List.{...}
  
  export Executable

  run(args:String...) = do

  println "Answer is " <a />
  println "Answer is " <x></x>

  println "Answer is " <aaa>aa</aaa>

  println "Answer is "  <aaa><foobar /></aaa>
  println "Answer is " <aaa foo="bar" />
  println "Answer is " <aaa><aa>aa</aa></aaa>

  println "Answer is " <hello><world>hi mom</world></hello>
  println "Answer is " <hello attr="foobar"><world>hi (* a fortress comment *) mom</world></hello>
  println "Answer is " <hello attr="foobar" more="blah"><world>hi mom</world></hello>

  xml:Content = <note>hi</note>
  println "Xml: " xml

  println "Xml: "
  <note>It makes no sense to have an XML literal here remember Fortress 
     interprets this as a new declaration like (* Element("note", CData(...), "note") *) </note>

  xml2 = <note>
           <to>Tove</to>
         </eton>
  println "Xml: " xml2

  

  println "Xml: " (
    <from>Jani</from>)

  println "Xml: " (
    <note>
      <to>Tove</to>
      <from>Jani</from>
      <heading>Reminder</heading>
      <body>Dont forget me this weekend</body>
    </note>)

(*
  println "Answer is " ( <aaal> <aaaal> aal </aaaal> </aaal>)
  println "Answer is " ( <aaal> <aaaal> <aal> aal </aal> </aaaal> </aaal>)
  *)
(*
  println "Answer is " ( <aaal> stuff </aaal>)
  *)
(*
  println "Answer is " ( <aaaaal>)
  *)
  (*
  println "Answer is " ( a)
  *)
  (*
  println "Answer is " ( aa)
  *)
  (* println ( <aaaa>) *)
  println "ok"
end

end
