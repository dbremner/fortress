(* THIS FILE WAS AUTOMATICALLY GENERATED BY
   com.sun.fortress.astgen.FortressAstGenerator FROM Fortress.ast *)

api FortressAst
import List.{...}

trait AbsDecl extends AbsDeclOrDecl  end
trait AbsDeclOrDecl extends Node  end
trait Decl extends AbsDeclOrDecl  end
trait Generic extends Node 
in_staticParams:List[\StaticParam\]
 end
trait GenericAbsDeclOrDecl extends { Node, Generic, AbsDeclOrDecl }  end
trait GenericAbsDeclOrDeclWithParams extends { Node, GenericWithParams, GenericAbsDeclOrDecl }  end
trait GenericDecl extends { GenericAbsDeclOrDecl, Decl }  end
trait GenericDeclWithParams extends { GenericAbsDeclOrDeclWithParams, GenericDecl }  end
trait GenericWithParams extends { Node, Generic, HasParams }  end
trait HasParams extends Node 
in_params:Maybe[\List[\Param\]\]
in_decls:List[\AbsDeclOrDecl\]
 end
trait HasWhere extends Node 
in_where:WhereClause
 end
trait Lhs extends Node  end
trait Node   end
trait TemplateGap extends Node 
in_id:Id
in_templateParams:List[\Id\]
 end
trait TypeOrDomain extends Node  end
object APIName (in_ids:List[\Id\]) extends Name
 toString():String
 end
trait AbbreviatedType extends BaseType 
in_type:Type
 end
object AbsExternalSyntax (in_openExpander:IdOrOpOrAnonymousName, in_name:Id, in_closeExpander:IdOrOpOrAnonymousName) extends { ExternalSyntaxAbsDeclOrDecl, AbsDecl }
 toString():String
 end
object AbsFnDecl (in_mods:List[\Modifier\], in_name:IdOrOpOrAnonymousName, in_staticParams:List[\StaticParam\], in_params:List[\Param\], in_returnType:Maybe[\Type\], in_throwsClause:Maybe[\List[\BaseType\]\], in_where:WhereClause, in_contract:Contract, in_selfName:String) extends { FnAbsDeclOrDecl, AbsDecl }
 toString():String
 end
object AbsObjectDecl (in_mods:List[\Modifier\], in_name:Id, in_staticParams:List[\StaticParam\], in_extendsClause:List[\TraitTypeWhere\], in_where:WhereClause, in_params:Maybe[\List[\Param\]\], in_throwsClause:Maybe[\List[\BaseType\]\], in_contract:Contract, in_decls:List[\AbsDecl\]) extends { ObjectAbsDeclOrDecl, AbsDecl }
 toString():String
 end
object AbsTraitDecl (in_mods:List[\Modifier\], in_name:Id, in_staticParams:List[\StaticParam\], in_extendsClause:List[\TraitTypeWhere\], in_where:WhereClause, in_excludes:List[\BaseType\], in_comprises:Maybe[\List[\BaseType\]\], in_decls:List[\AbsDecl\]) extends { TraitAbsDeclOrDecl, AbsDecl }
 toString():String
 end
object AbsVarDecl (in_lhs:List[\LValueBind\]) extends { VarAbsDeclOrDecl, AbsDecl, Decl }
 toString():String
 end
trait AbstractArrowType extends Type 
in_domain:Domain
in_range:Type
in_effect:Effect
 end
trait AbstractFieldRef extends { Primary, Lhs } 
in_obj:Expr
 end
trait AbstractNode extends Node  end
trait AbstractObjectExpr extends DelimitedExpr 
in_extendsClause:List[\TraitTypeWhere\]
in_decls:List[\Decl\]
 end
trait AbstractTupleExpr extends DelimitedExpr 
in_exprs:List[\Expr\]
 end
trait AbstractTupleType extends Type 
in_elements:List[\Type\]
 end
object Accumulator (in_staticArgs:List[\StaticArg\], in_opr:OpName, in_gens:List[\GeneratorClause\], in_body:Expr) extends BigOpApp
 toString():String
 end
object AliasedAPIName (in_api:APIName, in_alias:Maybe[\Id\]) extends AbstractNode
 toString():String
 end
object AliasedSimpleName (in_name:IdOrOpOrAnonymousName, in_alias:Maybe[\IdOrOpOrAnonymousName\]) extends AbstractNode
 toString():String
 end
object AndConstraint (in_left:BoolExpr, in_right:BoolExpr) extends BinaryBoolConstraint
 toString():String
 end
object AndPredicateSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
object AnonymousFnName (in_api:Maybe[\APIName\]) extends AnonymousName
 toString():String
 end
trait AnonymousName extends IdOrOpOrAnonymousName  end
object AnyCharacterSymbol  extends SpecialSymbol
 toString():String
 end
object AnyType  extends BaseType
 toString():String
 end
object Api (in_name:APIName, in_imports:List[\Import\], in_decls:List[\AbsDecl\]) extends CompilationUnit
 toString():String
 end
trait AppExpr extends Primary  end
object ArgExpr (in_exprs:List[\Expr\], in_varargs:Maybe[\VarargsExpr\], in_keywords:List[\KeywordExpr\], in_inApp:Boolean) extends AbstractTupleExpr
 toString():String
 end
object ArrayComprehension (in_staticArgs:List[\StaticArg\], in_clauses:List[\ArrayComprehensionClause\]) extends BigOpApp
 toString():String
 end
object ArrayComprehensionClause (in_bind:List[\Expr\], in_init:Expr, in_gens:List[\GeneratorClause\]) extends AbstractNode
 toString():String
 end
object ArrayElement (in_staticArgs:List[\StaticArg\], in_element:Expr) extends ArrayExpr
 toString():String
 end
object ArrayElements (in_staticArgs:List[\StaticArg\], in_dimension:ZZ32, in_elements:List[\ArrayExpr\]) extends ArrayExpr
 toString():String
 end
trait ArrayExpr extends Primary 
in_staticArgs:List[\StaticArg\]
 end
object ArrayType (in_type:Type, in_indices:Indices) extends AbbreviatedType
 toString():String
 end
object ArrowType (in_domain:Domain, in_range:Type, in_effect:Effect) extends AbstractArrowType
 toString():String
 end
object AsExpr (in_expr:Expr, in_type:Type) extends TypeAnnotatedExpr
 toString():String
 end
object AsIfExpr (in_expr:Expr, in_type:Type) extends TypeAnnotatedExpr
 toString():String
 end
object Assignment (in_lhs:List[\Lhs\], in_opr:Maybe[\OpRef\], in_rhs:Expr) extends Expr
 toString():String
 end
object AtomicExpr (in_expr:Expr) extends FlowExpr
 toString():String
 end
object BEConstraint (in_left:BoolExpr, in_right:BoolExpr) extends BinaryBoolConstraint
 toString():String
 end
object BackspaceSymbol  extends SpecialSymbol
 toString():String
 end
object BaseDim  extends DimExpr
 toString():String
 end
trait BaseType extends Type  end
object BigFixity  extends Fixity
 toString():String
 end
trait BigOpApp extends FlowExpr 
in_staticArgs:List[\StaticArg\]
 end
trait BinaryBoolConstraint extends BoolConstraint 
in_left:BoolExpr
in_right:BoolExpr
 end
object Block (in_exprs:List[\Expr\]) extends DelimitedExpr
 toString():String
 end
object BoolArg (in_bool:BoolExpr) extends StaticArg
 toString():String
 end
object BoolConstant (in_bool:Boolean) extends BoolVal
 toString():String
 end
trait BoolConstraint extends BoolExpr  end
object BoolConstraintExpr (in_constraint:BoolConstraint) extends WhereConstraint
 toString():String
 end
trait BoolExpr extends StaticExpr  end
object BoolParam (in_name:Id) extends IdStaticParam
 toString():String
 end
object BoolRef (in_name:Id) extends BoolVal
 toString():String
 end
trait BoolVal extends BoolExpr  end
object BottomType  extends BaseType
 toString():String
 end
trait BoundType extends Type 
in_elements:List[\Type\]
 end
object BreaklineSymbol (in_s:String) extends SpecialSymbol
 toString():String
 end
object CarriageReturnSymbol  extends SpecialSymbol
 toString():String
 end
object CaseClause (in_match:Expr, in_body:Block) extends AbstractNode
 toString():String
 end
object CaseExpr (in_param:Maybe[\Expr\], in_compare:Maybe[\OpRef\], in_equalsOp:OpRef, in_inOp:OpRef, in_clauses:List[\CaseClause\], in_elseClause:Maybe[\Block\]) extends DelimitedExpr
 toString():String
 end
object Catch (in_name:Id, in_clauses:List[\CatchClause\]) extends AbstractNode
 toString():String
 end
object CatchClause (in_match:BaseType, in_body:Block) extends AbstractNode
 toString():String
 end
object ChainExpr (in_first:Expr, in_links:List[\Link\]) extends AppExpr
 toString():String
 end
object CharLiteralExpr (in_text:String, in_val:ZZ32) extends LiteralExpr
 toString():String
 end
object CharSymbol (in_string:String) extends CharacterSymbol
 toString():String
 end
object CharacterClassSymbol (in_characters:List[\CharacterSymbol\]) extends SyntaxSymbol
 toString():String
 end
object CharacterInterval (in_begin:String, in_end:String) extends CharacterSymbol
 toString():String
 end
trait CharacterSymbol extends SyntaxSymbol  end
object CoercionInvocation (in_type:BaseType, in_staticArgs:List[\StaticArg\], in_arg:Expr) extends AppExpr
 toString():String
 end
trait CompilationUnit extends AbstractNode 
in_name:APIName
in_imports:List[\Import\]
 end
object Component (in__native:Boolean, in_name:APIName, in_imports:List[\Import\], in_exports:List[\Export\], in_decls:List[\Decl\]) extends CompilationUnit
 toString():String
 end
object ConstructorFnName (in_api:Maybe[\APIName\], in_def:GenericWithParams) extends AnonymousName
 toString():String
 end
object Contract (in_requires:Maybe[\List[\Expr\]\], in_ensures:Maybe[\List[\EnsuresClause\]\], in_invariants:Maybe[\List[\Expr\]\]) extends AbstractNode
 toString():String
 end
trait DelimitedExpr extends Expr  end
object DimArg (in_dim:DimExpr) extends StaticArg
 toString():String
 end
object DimDecl (in_dim:Id, in_derived:Maybe[\Type\], in_default:Maybe[\Id\]) extends DimUnitDecl
 toString():String
 end
trait DimExpr extends Type  end
object DimParam (in_name:Id) extends IdStaticParam
 toString():String
 end
object DimRef (in_name:Id) extends DimExpr
 toString():String
 end
trait DimUnitDecl extends { AbstractNode, Decl, AbsDecl }  end
object Do (in_fronts:List[\DoFront\]) extends DelimitedExpr
 toString():String
 end
object DoFront (in_loc:Maybe[\Expr\], in_atomic:Boolean, in_expr:Block) extends AbstractNode
 toString():String
 end
object Domain (in_args:List[\Type\], in_varargs:Maybe[\Type\], in_keywords:List[\KeywordType\]) extends { AbstractNode, TypeOrDomain }
 toString():String
 end
object Effect (in_throwsClause:Maybe[\List[\BaseType\]\], in_io:Boolean) extends AbstractNode
 toString():String
 end
object Enclosing (in_api:Maybe[\APIName\], in_open:Op, in_close:Op) extends OpName
 toString():String
 end
object EnclosingFixity  extends Fixity
 toString():String
 end
object EnsuresClause (in_post:Expr, in_pre:Maybe[\Expr\]) extends AbstractNode
 toString():String
 end
object Exit (in_target:Maybe[\Id\], in_returnExpr:Maybe[\Expr\]) extends FlowExpr
 toString():String
 end
object ExponentConstraint (in_left:IntExpr, in_right:IntExpr) extends IntOpExpr
 toString():String
 end
object ExponentDim (in_base:DimExpr, in_power:IntExpr) extends DimExpr
 toString():String
 end
object ExponentType (in_base:Type, in_power:IntExpr) extends DimExpr
 toString():String
 end
object ExponentUnit (in_left:UnitExpr, in_right:UnitExpr) extends UnitOpExpr
 toString():String
 end
object ExponentiationMI (in_op:OpRef, in_expr:Maybe[\Expr\]) extends NonExprMI
 toString():String
 end
object Export (in_apis:List[\APIName\]) extends AbstractNode
 toString():String
 end
trait Expr extends AbstractNode  end
trait ExprMI extends MathItem 
in_expr:Expr
 end
object ExtentRange (in_base:Maybe[\StaticArg\], in_size:Maybe[\StaticArg\]) extends AbstractNode
 toString():String
 end
object ExternalSyntax (in_openExpander:IdOrOpOrAnonymousName, in_name:Id, in_closeExpander:IdOrOpOrAnonymousName, in_expr:Expr) extends { ExternalSyntaxAbsDeclOrDecl, Decl }
 toString():String
 end
trait ExternalSyntaxAbsDeclOrDecl extends { AbstractNode, AbsDeclOrDecl } 
in_openExpander:IdOrOpOrAnonymousName
in_name:Id
in_closeExpander:IdOrOpOrAnonymousName
 end
object FieldRef (in_obj:Expr, in_field:Id) extends AbstractFieldRef
 toString():String
 end
object FixedPointType (in_name:Id, in_body:Type) extends Type
 toString():String
 end
trait Fixity extends AbstractNode  end
object FloatLiteralExpr (in_text:String, in_intPart:ZZ64, in_numerator:ZZ64, in_denomBase:ZZ32, in_denomPower:ZZ32) extends NumberLiteralExpr
 toString():String
 end
trait FlowExpr extends Expr  end
trait FnAbsDeclOrDecl extends { AbstractNode, GenericDecl } 
in_mods:List[\Modifier\]
in_name:IdOrOpOrAnonymousName
in_staticParams:List[\StaticParam\]
in_params:List[\Param\]
in_returnType:Maybe[\Type\]
in_throwsClause:Maybe[\List[\BaseType\]\]
in_where:WhereClause
in_contract:Contract
in_selfName:String
 end
trait FnDecl extends FnAbsDeclOrDecl  end
object FnDef (in_mods:List[\Modifier\], in_name:IdOrOpOrAnonymousName, in_staticParams:List[\StaticParam\], in_params:List[\Param\], in_returnType:Maybe[\Type\], in_throwsClause:Maybe[\List[\BaseType\]\], in_where:WhereClause, in_contract:Contract, in_selfName:String, in_body:Expr) extends FnDecl
 toString():String
 end
object FnExpr (in_name:IdOrOpOrAnonymousName, in_staticParams:List[\StaticParam\], in_params:List[\Param\], in_returnType:Maybe[\Type\], in_where:WhereClause, in_throwsClause:Maybe[\List[\BaseType\]\], in_body:Expr) extends Expr
 toString():String
 end
object FnRef (in_lexicalDepth:ZZ32, in_originalName:Id, in_fns:List[\Id\], in_staticArgs:List[\StaticArg\]) extends FunctionalRef
 toString():String
 end
object For (in_gens:List[\GeneratorClause\], in_body:DoFront) extends DelimitedExpr
 toString():String
 end
object FormfeedSymbol  extends SpecialSymbol
 toString():String
 end
trait FunctionalRef extends Primary 
in_staticArgs:List[\StaticArg\]
in_lexicalDepth:ZZ32
 end
object GEConstraint (in_left:IntExpr, in_right:IntExpr) extends IntConstraint
 toString():String
 end
object GTConstraint (in_left:IntExpr, in_right:IntExpr) extends IntConstraint
 toString():String
 end
object GeneratedExpr (in_expr:Expr, in_gens:List[\GeneratorClause\]) extends Expr
 toString():String
 end
object GeneratorClause (in_bind:List[\Id\], in_init:Expr) extends AbstractNode
 toString():String
 end
trait GrammarDecl extends { AbstractNode, AbsDecl } 
in_name:Id
in_extends:List[\Id\]
 end
object GrammarDef (in_name:Id, in_extends:List[\Id\], in_members:List[\GrammarMemberDecl\]) extends GrammarDecl
 toString():String
 end
trait GrammarMemberDecl extends { AbstractNode, AbsDecl } 
in_header:NonterminalHeader
in_astType:Maybe[\BaseType\]
 end
object GroupSymbol (in_symbols:List[\SyntaxSymbol\]) extends SyntaxSymbol
 toString():String
 end
object IEConstraint (in_left:IntExpr, in_right:IntExpr) extends IntConstraint
 toString():String
 end
object Id (in_api:Maybe[\APIName\], in_text:String) extends IdOrOpName
 toString():String
 end
trait IdOrOpName extends IdOrOpOrAnonymousName  end
trait IdOrOpOrAnonymousName extends Name 
in_api:Maybe[\APIName\]
 end
trait IdStaticParam extends StaticParam 
in_name:Id
 end
object If (in_clauses:List[\IfClause\], in_elseClause:Maybe[\Block\]) extends DelimitedExpr
 toString():String
 end
object IfClause (in_test:GeneratorClause, in_body:Block) extends AbstractNode
 toString():String
 end
object ImpliesConstraint (in_left:BoolExpr, in_right:BoolExpr) extends BinaryBoolConstraint
 toString():String
 end
trait Import extends AbstractNode  end
object ImportApi (in_apis:List[\AliasedAPIName\]) extends Import
 toString():String
 end
object ImportNames (in_api:APIName, in_aliasedNames:List[\AliasedSimpleName\]) extends ImportedNames
 toString():String
 end
object ImportStar (in_api:APIName, in_except:List[\IdOrOpOrAnonymousName\]) extends ImportedNames
 toString():String
 end
trait ImportedNames extends Import 
in_api:APIName
 end
object InFixity  extends Fixity
 toString():String
 end
object Indices (in_extents:List[\ExtentRange\]) extends AbstractNode
 toString():String
 end
object IntArg (in_val:IntExpr) extends StaticArg
 toString():String
 end
trait IntConstraint extends WhereConstraint 
in_left:IntExpr
in_right:IntExpr
 end
trait IntExpr extends StaticExpr  end
object IntLiteralExpr (in_text:String, in_val:ZZ64) extends NumberLiteralExpr
 toString():String
 end
trait IntOpExpr extends IntExpr 
in_left:IntExpr
in_right:IntExpr
 end
object IntParam (in_name:Id) extends IdStaticParam
 toString():String
 end
object IntRef (in_name:Id) extends IntVal
 toString():String
 end
trait IntVal extends IntExpr  end
object IntersectionType (in_elements:List[\Type\]) extends BoundType
 toString():String
 end
object ItemSymbol (in_item:String) extends SyntaxSymbol
 toString():String
 end
trait Juxt extends AppExpr 
in_multiJuxt:OpRef
in_infixJuxt:OpRef
in_exprs:List[\Expr\]
 end
object KeywordExpr (in_name:Id, in_init:Expr) extends AbstractNode
 toString():String
 end
object KeywordSymbol (in_token:String) extends SyntaxSymbol
 toString():String
 end
object KeywordType (in_name:Id, in_type:Type) extends AbstractNode
 toString():String
 end
object LEConstraint (in_left:IntExpr, in_right:IntExpr) extends IntConstraint
 toString():String
 end
object LTConstraint (in_left:IntExpr, in_right:IntExpr) extends IntConstraint
 toString():String
 end
trait LValue extends AbstractNode  end
object LValueBind (in_name:Id, in_type:Maybe[\Type\], in_mods:List[\Modifier\], in_mutable:Boolean) extends { LValue, Lhs }
 toString():String
 end
object Label (in_name:Id, in_body:Block) extends DelimitedExpr
 toString():String
 end
object LabelType  extends Type
 toString():String
 end
trait LetExpr extends Expr 
in_body:List[\Expr\]
 end
object LetFn (in_body:List[\Expr\], in_fns:List[\FnDef\]) extends LetExpr
 toString():String
 end
object Link (in_op:OpRef, in_expr:Expr) extends AbstractNode
 toString():String
 end
trait LiteralExpr extends Primary 
in_text:String
 end
object LocalVarDecl (in_body:List[\Expr\], in_lhs:List[\LValue\], in_rhs:Maybe[\Expr\]) extends LetExpr
 toString():String
 end
object LooseJuxt (in_multiJuxt:OpRef, in_infixJuxt:OpRef, in_exprs:List[\Expr\]) extends Juxt
 toString():String
 end
trait MathItem extends AbstractNode  end
object MathPrimary (in_multiJuxt:OpRef, in_infixJuxt:OpRef, in_front:Expr, in_rest:List[\MathItem\]) extends Primary
 toString():String
 end
object MatrixType (in_type:Type, in_dimensions:List[\ExtentRange\]) extends AbbreviatedType
 toString():String
 end
object MethodInvocation (in_obj:Expr, in_method:Id, in_staticArgs:List[\StaticArg\], in_arg:Expr) extends AppExpr
 toString():String
 end
object MinusConstraint (in_left:IntExpr, in_right:IntExpr) extends IntOpExpr
 toString():String
 end
trait Modifier extends AbstractNode  end
object ModifierAbstract  extends Modifier
 toString():String
 end
object ModifierAtomic  extends Modifier
 toString():String
 end
object ModifierGetter  extends Modifier
 toString():String
 end
object ModifierHidden  extends Modifier
 toString():String
 end
object ModifierIO  extends Modifier
 toString():String
 end
object ModifierOverride  extends Modifier
 toString():String
 end
object ModifierPrivate  extends Modifier
 toString():String
 end
object ModifierSettable  extends Modifier
 toString():String
 end
object ModifierSetter  extends Modifier
 toString():String
 end
object ModifierTest  extends Modifier
 toString():String
 end
object ModifierTransient  extends Modifier
 toString():String
 end
object ModifierValue  extends Modifier
 toString():String
 end
object ModifierVar  extends Modifier
 toString():String
 end
object ModifierWidens  extends Modifier
 toString():String
 end
object ModifierWrapped  extends Modifier
 toString():String
 end
object MultiFixity  extends Fixity
 toString():String
 end
trait Name extends AbstractNode  end
trait NamedType extends BaseType 
in_name:Id
in_lexicalDepth:ZZ32
 end
object NatParam (in_name:Id) extends IdStaticParam
 toString():String
 end
object NewlineSymbol  extends SpecialSymbol
 toString():String
 end
object NoFixity  extends Fixity
 toString():String
 end
object NoWhitespaceSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
trait NonExprMI extends MathItem  end
object NonParenthesisDelimitedMI (in_expr:Expr) extends ExprMI
 toString():String
 end
trait NonterminalDecl extends GrammarMemberDecl 
in_syntaxDefs:List[\SyntaxDef\]
 end
object NonterminalDef (in_header:NonterminalHeader, in_astType:Maybe[\BaseType\], in_syntaxDefs:List[\SyntaxDef\]) extends NonterminalDecl
 toString():String
 end
object NonterminalExtensionDef (in_header:NonterminalHeader, in_astType:Maybe[\BaseType\], in_syntaxDefs:List[\SyntaxDef\]) extends NonterminalDecl
 toString():String
 end
object NonterminalHeader (in_modifier:Maybe[\ModifierPrivate\], in_name:Id, in_params:List[\NonterminalParameter\], in_staticParams:List[\StaticParam\], in_type:Maybe[\Type\], in_whereClause:WhereClause) extends AbstractNode
 toString():String
 end
object NonterminalParameter (in_name:Id, in_type:BaseType) extends AbstractNode
 toString():String
 end
object NonterminalSymbol (in_nonterminal:Id) extends SyntaxSymbol
 toString():String
 end
object NormalParam (in_mods:List[\Modifier\], in_name:Id, in_type:Maybe[\Type\], in_defaultExpr:Maybe[\Expr\]) extends Param
 toString():String
 end
object NotConstraint (in_bool:BoolExpr) extends BoolConstraint
 toString():String
 end
object NotPredicateSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
object NumberConstraint (in_val:IntLiteralExpr) extends IntVal
 toString():String
 end
trait NumberLiteralExpr extends LiteralExpr  end
trait ObjectAbsDeclOrDecl extends { TraitObjectAbsDeclOrDecl, GenericAbsDeclOrDeclWithParams } 
in_params:Maybe[\List[\Param\]\]
in_throwsClause:Maybe[\List[\BaseType\]\]
in_contract:Contract
in_decls:List[\AbsDeclOrDecl\]
 end
object ObjectDecl (in_mods:List[\Modifier\], in_name:Id, in_staticParams:List[\StaticParam\], in_extendsClause:List[\TraitTypeWhere\], in_where:WhereClause, in_params:Maybe[\List[\Param\]\], in_throwsClause:Maybe[\List[\BaseType\]\], in_contract:Contract, in_decls:List[\Decl\]) extends { ObjectAbsDeclOrDecl, GenericDeclWithParams }
 toString():String
 end
object ObjectExpr (in_extendsClause:List[\TraitTypeWhere\], in_decls:List[\Decl\]) extends AbstractObjectExpr
 toString():String
 end
object Op (in_api:Maybe[\APIName\], in_text:String, in_fixity:Maybe[\Fixity\]) extends OpName
 toString():String
 end
object OpArg (in_name:Op) extends StaticArg
 toString():String
 end
object OpDim (in_val:DimExpr, in_op:Op) extends DimExpr
 toString():String
 end
object OpExpr (in_op:OpRef, in_args:List[\Expr\]) extends AppExpr
 toString():String
 end
trait OpName extends IdOrOpName  end
object OpParam (in_name:Op) extends StaticParam
 toString():String
 end
object OpRef (in_lexicalDepth:ZZ32, in_originalName:OpName, in_ops:List[\OpName\], in_staticArgs:List[\StaticArg\]) extends FunctionalRef
 toString():String
 end
object OptionalSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
object OrConstraint (in_left:BoolExpr, in_right:BoolExpr) extends BinaryBoolConstraint
 toString():String
 end
trait Param extends AbstractNode 
in_mods:List[\Modifier\]
in_name:Id
 end
object ParenthesisDelimitedMI (in_expr:Expr) extends ExprMI
 toString():String
 end
object PostFixity  extends Fixity
 toString():String
 end
object PreFixity  extends Fixity
 toString():String
 end
object PrefixedSymbol (in_id:Maybe[\Id\], in_type:Maybe[\Type\], in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
trait Primary extends SimpleExpr  end
object ProductConstraint (in_left:IntExpr, in_right:IntExpr) extends IntOpExpr
 toString():String
 end
object ProductDim (in_multiplier:DimExpr, in_multiplicand:DimExpr) extends DimExpr
 toString():String
 end
object ProductUnit (in_left:UnitExpr, in_right:UnitExpr) extends UnitOpExpr
 toString():String
 end
object PropertyDecl (in_name:Maybe[\Id\], in_params:List[\Param\], in_expr:Expr) extends { AbstractNode, Decl, AbsDecl }
 toString():String
 end
object QuotientDim (in_numerator:DimExpr, in_denominator:DimExpr) extends DimExpr
 toString():String
 end
object QuotientUnit (in_left:UnitExpr, in_right:UnitExpr) extends UnitOpExpr
 toString():String
 end
object RepeatOneOrMoreSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
object RepeatSymbol (in_symbol:SyntaxSymbol) extends SyntaxSymbol
 toString():String
 end
trait SimpleExpr extends Expr  end
object Spawn (in_body:Expr) extends FlowExpr
 toString():String
 end
trait SpecialSymbol extends SyntaxSymbol  end
trait StaticArg extends AbstractNode  end
trait StaticExpr extends AbstractNode  end
trait StaticParam extends AbstractNode  end
object StringLiteralExpr (in_text:String) extends LiteralExpr
 toString():String
 end
object SubscriptExpr (in_obj:Expr, in_subs:List[\Expr\], in_op:Maybe[\Enclosing\], in_staticArgs:List[\StaticArg\]) extends { SimpleExpr, Lhs }
 toString():String
 end
object SubscriptingMI (in_op:Enclosing, in_exprs:List[\Expr\], in_staticArgs:List[\StaticArg\]) extends NonExprMI
 toString():String
 end
object SumConstraint (in_left:IntExpr, in_right:IntExpr) extends IntOpExpr
 toString():String
 end
trait SyntaxDecl extends { AbstractNode, AbsDecl }  end
object SyntaxDef (in_syntaxSymbols:List[\SyntaxSymbol\], in_transformation:TransformationDecl) extends SyntaxDecl
 toString():String
 end
trait SyntaxSymbol extends AbstractNode  end
object TabSymbol  extends SpecialSymbol
 toString():String
 end
object TaggedDimType (in_type:Type, in_dim:DimExpr, in_unit:Maybe[\Expr\]) extends AbbreviatedType
 toString():String
 end
object TaggedUnitType (in_type:Type, in_unit:Expr) extends AbbreviatedType
 toString():String
 end
trait TerminalDecl extends GrammarMemberDecl 
in_syntaxDef:SyntaxDef
 end
object TestDecl (in_name:Id, in_gens:List[\GeneratorClause\], in_expr:Expr) extends { AbstractNode, Decl, AbsDecl }
 toString():String
 end
object Throw (in_expr:Expr) extends FlowExpr
 toString():String
 end
object TightJuxt (in_multiJuxt:OpRef, in_infixJuxt:OpRef, in_exprs:List[\Expr\]) extends Juxt
 toString():String
 end
object TokenSymbol (in_token:String) extends SyntaxSymbol
 toString():String
 end
trait TraitAbsDeclOrDecl extends TraitObjectAbsDeclOrDecl 
in_excludes:List[\BaseType\]
in_comprises:Maybe[\List[\BaseType\]\]
in_decls:List[\AbsDeclOrDecl\]
 end
object TraitDecl (in_mods:List[\Modifier\], in_name:Id, in_staticParams:List[\StaticParam\], in_extendsClause:List[\TraitTypeWhere\], in_where:WhereClause, in_excludes:List[\BaseType\], in_comprises:Maybe[\List[\BaseType\]\], in_decls:List[\Decl\]) extends { TraitAbsDeclOrDecl, GenericDecl }
 toString():String
 end
trait TraitObjectAbsDeclOrDecl extends { AbstractNode, HasWhere, GenericAbsDeclOrDecl } 
in_mods:List[\Modifier\]
in_name:Id
in_staticParams:List[\StaticParam\]
in_extendsClause:List[\TraitTypeWhere\]
in_where:WhereClause
in_decls:List[\AbsDeclOrDecl\]
 end
object TraitType (in_name:Id, in_lexicalDepth:ZZ32, in_args:List[\StaticArg\]) extends NamedType
 toString():String
 end
object TraitTypeWhere (in_type:BaseType, in_where:WhereClause) extends AbstractNode
 toString():String
 end
trait TransformationDecl extends { AbstractNode, AbsDecl }  end
object TransformationExpressionDef (in_transformation:Expr) extends TransformationDecl
 toString():String
 end
object TransformationPreTemplateDef (in_productionName:String, in_transformation:String) extends TransformationDecl
 toString():String
 end
object TransformationTemplateDef (in_transformation:AbstractNode) extends TransformationDecl
 toString():String
 end
object Try (in_body:Block, in_catchClause:Maybe[\Catch\], in_forbid:List[\BaseType\], in_finallyClause:Maybe[\Block\]) extends DelimitedExpr
 toString():String
 end
object TryAtomicExpr (in_expr:Expr) extends FlowExpr
 toString():String
 end
object TupleExpr (in_exprs:List[\Expr\]) extends AbstractTupleExpr
 toString():String
 end
object TupleType (in_elements:List[\Type\]) extends AbstractTupleType
 toString():String
 end
trait Type extends { AbstractNode, TypeOrDomain }  end
object TypeAlias (in_name:Id, in_staticParams:List[\StaticParam\], in_type:Type) extends { WhereConstraint, Decl, AbsDecl }
 toString():String
 end
trait TypeAnnotatedExpr extends Expr 
in_expr:Expr
in_type:Type
 end
object TypeArg (in_type:Type) extends StaticArg
 toString():String
 end
object TypeParam (in_name:Id, in_extendsClause:List[\BaseType\], in_absorbs:Boolean) extends IdStaticParam
 toString():String
 end
object Typecase (in_bindIds:List[\Id\], in_bindExpr:Maybe[\Expr\], in_clauses:List[\TypecaseClause\], in_elseClause:Maybe[\Block\]) extends DelimitedExpr
 toString():String
 end
object TypecaseClause (in_match:List[\Type\], in_body:Block) extends AbstractNode
 toString():String
 end
object UnionType (in_elements:List[\Type\]) extends BoundType
 toString():String
 end
object UnitArg (in_unit:UnitExpr) extends StaticArg
 toString():String
 end
object UnitConstraint (in_name:Id) extends WhereConstraint
 toString():String
 end
object UnitDecl (in_si_unit:Boolean, in_units:List[\Id\], in_dim:Maybe[\Type\], in_def:Maybe[\Expr\]) extends DimUnitDecl
 toString():String
 end
trait UnitExpr extends StaticExpr  end
trait UnitOpExpr extends UnitExpr 
in_left:UnitExpr
in_right:UnitExpr
 end
object UnitParam (in_name:Id, in_dim:Maybe[\Type\], in_absorbs:Boolean) extends IdStaticParam
 toString():String
 end
object UnitRef (in_name:Id) extends UnitExpr
 toString():String
 end
trait Unpasting extends LValue  end
object UnpastingBind (in_name:Id, in_dim:List[\ExtentRange\]) extends Unpasting
 toString():String
 end
object UnpastingSplit (in_elems:List[\Unpasting\], in_dim:ZZ32) extends Unpasting
 toString():String
 end
trait VarAbsDeclOrDecl extends { AbstractNode, AbsDeclOrDecl } 
in_lhs:List[\LValueBind\]
 end
object VarDecl (in_lhs:List[\LValueBind\], in_init:Expr) extends { VarAbsDeclOrDecl, Decl }
 toString():String
 end
object VarRef (in_var:Id, in_lexicalDepth:ZZ32) extends { Primary, Lhs }
 toString():String
 end
object VarType (in_name:Id, in_lexicalDepth:ZZ32) extends NamedType
 toString():String
 end
object VarargTupleType (in_elements:List[\Type\], in_varargs:Type) extends AbstractTupleType
 toString():String
 end
object VarargsExpr (in_varargs:Expr) extends AbstractNode
 toString():String
 end
object VarargsParam (in_mods:List[\Modifier\], in_name:Id, in_type:Type) extends Param
 toString():String
 end
object VoidLiteralExpr (in_text:String) extends LiteralExpr
 toString():String
 end
object VoidType  extends Type
 toString():String
 end
trait WhereBinding extends AbstractNode 
in_name:Id
 end
object WhereBool (in_name:Id) extends WhereBinding
 toString():String
 end
object WhereClause (in_bindings:List[\WhereBinding\], in_constraints:List[\WhereConstraint\]) extends AbstractNode
 toString():String
 end
object WhereCoerces (in_left:Type, in_right:Type) extends WhereConstraint
 toString():String
 end
trait WhereConstraint extends AbstractNode  end
object WhereEquals (in_left:Id, in_right:Id) extends WhereConstraint
 toString():String
 end
object WhereExtends (in_name:Id, in_supers:List[\BaseType\]) extends WhereConstraint
 toString():String
 end
object WhereInt (in_name:Id) extends WhereBinding
 toString():String
 end
object WhereNat (in_name:Id) extends WhereBinding
 toString():String
 end
object WhereType (in_name:Id, in_supers:List[\BaseType\]) extends WhereBinding
 toString():String
 end
object WhereUnit (in_name:Id) extends WhereBinding
 toString():String
 end
object WhereWidens (in_left:Type, in_right:Type) extends WhereConstraint
 toString():String
 end
object WhereWidensCoerces (in_left:Type, in_right:Type) extends WhereConstraint
 toString():String
 end
object While (in_test:GeneratorClause, in_body:Do) extends DelimitedExpr
 toString():String
 end
object WhitespaceSymbol (in_s:String) extends SpecialSymbol
 toString():String
 end

end
