(*******************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

native component JavaString
import CordedString.{CatString, EmptyString}
export JavaString


language="java"
package="com.sun.fortress.interpreter.glue.prim"

  isEmptyRange(r: Range[\ZZ32\]) = r.extent() â‰¤ 0    (* should be a method on ranges *)

  object JavaString
        extends { String }
    getter size() : ZZ32 =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Size")
    getter toString() : String =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$ToString")
    opr |self| : ZZ32 =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Size")    
    uncheckedSubstring(r1: Range[\ZZ32\]) : String = 
        if isEmptyRange(r1) then ""
        else self.javaSubstr(r1.lower(), r1.upper() + 1)    (* Java substring's endIndex is one past the last character *)
        end
    opr =(self, other:String): Boolean =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Eq")
    opr <(self, other:String): Boolean = self.cmp(other) < 0
    opr <=(self, other:String): Boolean = self.cmp(other) <= 0
    opr >(self, other:String): Boolean = self.cmp(other) > 0
    opr >=(self, other:String): Boolean = self.cmp(other) >= 0
    opr CMP(self, other:JavaString): TotalComparison = self.cmp(other) CMP 0
    opr CMP(self, other:String):TotalComparison = INVERSE (other CMP self)
    opr CASE_INSENSITIVE_CMP(self, other:JavaString): TotalComparison =
      self.cicmp(other) CMP 0
    opr CASE_INSENSITIVE_CMP(self, other:String): TotalComparison = INVERSE (other CASE_INSENSITIVE_CMP self) 

    (** get skips bounds checking. **)
    get(i:ZZ32): Char =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Index")
    cmp(other:JavaString): ZZ32 =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Cmp")
    cicmp(other:JavaString): ZZ32 =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$CICmp")
    javaSubstr(lo:ZZ32,hi:ZZ32): String =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$Substr")
    javaIndexOf(c:Char): ZZ32 =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$IndexOf")

    indexOf(c:Char): Maybe[\ZZ32\] = do
        i = javaIndexOf(c)
        if i = -1 then Nothing[\ZZ32\] else Just[\ZZ32\](i) end
      end

    opr IN(c:Char): Boolean = javaIndexOf(c) =/= -1

    (** The operator %||% with at least one String argument converts to string and
        appends **)
    opr ||(self, b:JavaString):String =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$App")
    opr ||(self, b:String):String =
        CatString(self, b)
(*    opr ||(self, b:EmptyString):String =
        self
        *)
    opr ||(self, b:Char): String =
        builtinPrimitive("com.sun.fortress.interpreter.glue.prim.JavaString$App")

  end

end
