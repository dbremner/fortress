(*******************************************************************************
    Copyright 2008 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

native component File
import JavaString.JavaString
import FileSupport.{...}
export File

language="java"
package="com.sun.fortress.interpreter.glue.prim"

FileReadStream(filename: String): FileReadStream = FileReadStream(filename.asJavaString)

object FileReadStream(filename: JavaString)
        extends { ReadStream, FileStream }
    getter fileName():String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$fileName")

    getter asString():String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$toString")

    getter eof():Boolean =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$eof")

    getter ready():Boolean =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$ready")

    whenUnconsumed():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$whenUnconsumed")
    consume():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$consume")

    uncheckedReadLine():String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$readLine")

    uncheckedReadChar():ZZ32 =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$readChar")

    uncheckedRead(k:ZZ32):String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$readk")

    close():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileReadStream$close")
end

FileWriteStream(fileName:String) = FileWriteStream(fileName.asJavaString)

object FileWriteStream(fileName:JavaString) extends { FileStream }
    getter fileName(): String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileWriteStream$fileName")
    getter asString(): String =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileWriteStream$toString")
    write(s:JavaString):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileWriteStream$write")
    write(c:Char):() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileWriteStream$write")
    write(x:String):() = x.writeOn(self)
    write(x:Any): () = write("" x)
    writes(x:Generator[\Any\], r:String):() =
        write((BIG ||[e <- x]
                   typecase e of
                        JavaString => e
                        String => e.asJavaString
                        else   => ("" e).asJavaString
                   end) r)
    writes(x:Generator[\Any\]):() = writes(x,"")
    print(x:Any...):() = writes(x)
    println(x:Any...):() = writes(x,"\n")
    close():() =
      builtinPrimitive(
        "com.sun.fortress.interpreter.glue.prim.FileWriteStream$close")
end

end
